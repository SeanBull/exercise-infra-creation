# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      - run: 
          name: refresh inventory
          command: |
            echo "[all]" > inventory
      - run:
          name: update inventory
          command: |
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --region us-east-1 --profile admin \
            --output text >> inventory
      - persist_to_workspace:
          root: ~/
          paths:
            - inventory


  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11

    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["94:20:45:51:80:4c:c9:d0:af:64:27:9c:46:b9:0d:df"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible

      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook main.yml -i inventory 

            

# --------------------Previous Work----------------------
  # create-aws-infrastructure:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: amazon/aws-cli
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: Create Cloudformation Stack
  #         command: |
  #           aws cloudformation deploy \
  #             --template-file template.yml \
  #             --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #             --region us-east-1
  # delete-aws-infrastructure:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: amazon/aws-cli
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: delete Cloudformation Stack
  #         command: |
  #           aws cloudformation delete-stack \
  #             --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #             --region us-east-1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
    using-ansible:
      jobs:
        - create_infrastructure
        - configure_infrastructure:
            requires:
              - create_infrastructure

  # say-hello-workflow:
  #   jobs:
  #     - create-aws-infrastructure
  #     - delete-aws-infrastructure:
  #         requires: 
  #           - create-aws-infrastructure